<?xml version="1.0" encoding="utf-8"?>
<s:TextInput xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 creationComplete="init(event)">
	<s:fontSize>
		12
	</s:fontSize>
	<fx:Script>
		<![CDATA[
		/**
		 * Text input can automaitcally set the default text when the text is empty. 
		 */
			import mx.events.FlexEvent;
			
			/**
			 * The text to be used as a default.
			 */
			private var defaultText:String;
			
			/**
			 * On creation completed sets the current text as a default text.
			 * Adds FocusEvent.MOUSE_FOCUS_CHANGE event listener to handle focus change by the user.
			 */
			protected function init(event:FlexEvent):void
			{
				defaultText = this.text;
				addEventListener(FocusEvent.MOUSE_FOCUS_CHANGE, onMouseFocusChange);
			}

			/**
			 * On textInput receives the focus checks the text and clear it if it is equals the default text.
			 */
			override protected function focusInHandler(event:FocusEvent):void
			{
				if(text.replace(/ /g, "") == defaultText)
				{
					this.text = "";
				}
				super.focusInHandler(event);
			}

			/**
			 * On textInput looses the focus checks the text and change it to default text
			 * if it is empty.
			 */
			override protected function focusOutHandler(event:FocusEvent):void
			{
				if(text.replace(/ /g, "") == "")
				{
					this.text = defaultText;
				}
				super.focusOutHandler(event);
			}
			
			/**
			 * On FocusEvent.MOUSE_FOCUS_CHANGE the TextInput must loose the focus.
			 */
			protected function onMouseFocusChange(event:FocusEvent):void
			{
				if(stage)
				{
					stage.focus = null;
				}
			}
			
			/**
			 * Returns the text.
			 * Returns empty string if the text is equals the default text.
			 */
			public function get value():String
			{
				return text == defaultText? "":text;
			}
			
		]]>
	</fx:Script>
</s:TextInput>
